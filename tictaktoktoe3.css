* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
    align-items: center;
    background: white;
    display: flex;
    flex-direction: column;
    font-family: sans-serif;
    padding: 25px;
  }
  
  h1 {
    color: rgb(0, 225, 255) ;
    font-size: 40px;
    font-weight: 800;
    letter-spacing: 10px;
    margin-top: 20px;
    text-shadow: 3px 3px 10px blue;
    text-transform: uppercase;
    word-spacing: 10px;
    font-weight: 700;
  }
  .container{
    margin: 20px 0 ;
  }
  .game-board {
    display: grid;
    grid-template-columns: repeat(9, 1fr);
    grid-template-rows: repeat(9, 1fr);
    height: 100px;
    /* margin: 10px 0 200px; */
    width: 955px;
    /* box-shadow: rgba(0, 0, 0, 0.56) 0px 22px 70px 4px; */
    /* box-shadow: rgba(240, 46, 170, 0.4) 5px 5px, rgba(240, 46, 170, 0.3) 10px 10px, rgba(240, 46, 170, 0.2) 15px 15px, rgba(240, 46, 170, 0.1) 20px 20px, rgba(240, 46, 170, 0.05) 25px 25px; */
  }
  
  .cell {
    align-items: center;
    background: #000000;
    display: flex;
    height: 100px;
    justify-content: center;
    width: 100px;
  }
  
  .cell::after {                                            /* Adds circles on the top row. Just adds*/
    background: white;
    border-radius: 50%;
    border: 3px solid black;
    content: '';
    cursor: pointer;
    height: 75px;
    width: 75px;
  }
  
  .cell:not(.row-top).red::after {                        /* shows rather circle that is on the top should be red or yellow */
    background: red;
  }
  .cell:not(.row-top).yellow::after {                    /* shows rather circle that is on the top should be red or yellow */
    background: yellow;
  }
  .cell:not(.row-top).green::after {                    /* shows rather circle that is on the top should be red or yellow */
    background: green;
  }
  
  .cell:not(.row-top).red.win {                          /* shows how should be winning combination*/     
    background: red;
  }
  .cell:not(.row-top).yellow.win {                       /* shows how should be winning combination*/
    background: yellow;
  }
  .cell:not(.row-top).green.win {                       /* shows how should be winning combination*/
    background: green;
  }
  
  .cell.row-top {
    background: white;                                 /* Even though it is not important. We add a style in order to make div class of row-top visible*/
  }
  
  .cell.row-top::after {
    border: none;                                        /* circle would not have any borders*/                                
  }
  
  .cell.row-top.red::after {
    background: red;
    border: 3px solid black;
  }
  
  .cell.row-top.yellow::after {
    background: yellow;                      
    border: 3px solid black;
  }

  .cell.row-top.green::after {
    background: green;                      
    border: 3px solid black;
  }
  
  .footer {
    align-items: center;
    display: flex;
    justify-content: space-between;
    width: 700px;
    margin-top: 200%;
  }
  
  .reset {                                                      /* reset button */
    background-color: #000000;
    border-radius: 5px;
    border: none;
    color: rgb(0, 225, 255);
    cursor: pointer;
    display: block;
    font-size: 16px;
    font-weight: bold;
    padding: 15px 30px;
    text-transform: uppercase;
    border: 2px solid rgb(0, 225, 255);
}

.reset:hover {
    background-color: rgb(0, 225, 255);
    color: black ;
    transition: 0.3s;
  }
  
  .reset:active {
    background-color: #4d7ef1;
  
  }
  
  .status {
    display: block;
    font-size: 20px;
  }
  
  /* Util CSS */
  .left-border {
    border-left: 3px solid black;
  }
  
  .top-border {
    border-top: 3px solid black;
  }
  
  .right-border {
    border-right: 3px solid black;
  }
  
  .bottom-border {
    border-bottom: 3px solid black;
  }
  
  .left-border.top-border {
    border-radius: 10px 0 0 0;
  }
  
  .right-border.top-border {
    border-radius: 0 10px 0 0;
  }
  
  .right-border.bottom-border {
    border-radius: 0 0 10px 0;
  }
  
  .left-border.bottom-border {
    border-radius: 0 0 0 10px;
  }










/* not really correctly way to make file responsible. However for now that is what I need. */
  @media only screen  and (max-width:1300px) and (min-width:1200px){                 
    body{
      scale: 0.50;
      margin-top: -320px;
    }
    .footer {
      margin-top: 100%;
    }
}
